
stages:
- unit-test
- build
- deploy-dev
- deploy-prod

unit-test:
  image: python:3.9
  stage: unit-test
  script:
    - pip install -r requirements.txt
    - cd app
    - python test_unit.py --verbose
  only:
    - master

build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  only:
    - master

deploy-dev:
  stage: deploy-dev
  image: nekottyo/kustomize-kubeval:latest
  before_script:
    # - git remote set-url origin https://${CI_USERNAME}:${CI_PUSH_TOKEN}@gitlab.com/e-lie/cicd_gitlab_argocd_corrections.git
    # git clone infra repo 
    - git config --global user.email "gitoops@gitoops.net"
    - git config --global user.name "GitLabops pipeline"
  script:
    - git checkout -B master
    - cd k8s/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - cat kustomization.yaml
    - git commit -am '[skip ci] DEV image update'
    # - git push origin   -> push branch corresponding to app branch (env var)
  only:
    - master

deploy-prod:
  stage: deploy-prod
  image: nekottyo/kustomize-kubeval:latest
  before_script:
    - git remote set-url origin https://${CI_USERNAME}:${CI_PUSH_TOKEN}@gitlab.com/e-lie/cicd_gitlab_argocd_corrections.git
    - git config --global user.email "gitoops@gitoops.net"
    - git config --global user.name "GitLabops pipeline"
  script:
    - git checkout -B k8s_gitlab_argocd_correction
    - git pull origin k8s_gitlab_argocd_correction
    - cd k8s/prod
    - kustomize edit set image $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - cat kustomization.yaml
    - git commit -am '[skip ci] PROD image update'
    - git push origin k8s_gitlab_argocd_correction
  only:
    - k8s_gitlab_argocd_correction
  when: manual
